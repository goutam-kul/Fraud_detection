version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fraud-detection-api
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/frauddb
      - MODEL_PATH=/app/models/model.joblib
      - SCALER_PATH=/app/models/amount_scaler.joblib
      - CLASS_WEIGHTS_PATH=/app/models/class_weights.joblib
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fraud-net
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: fraud-detection-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=frauddb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -h localhost -d frauddb"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s  # Give it some time to start up
    networks:
      - fraud-net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: fraud-detection-prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - app
    networks:
      - fraud-net
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: fraud-detection-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    networks:
      - fraud-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: fraud-detection-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - fraud-net
    restart: unless-stopped

networks:
  fraud-net:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: